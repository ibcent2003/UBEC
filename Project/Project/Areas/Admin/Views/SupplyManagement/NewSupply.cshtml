@model Project.Areas.Admin.Models.SupplyViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title ="New Supply";
    ViewBag.IsGreetings = "true";

}
@section Crumbs{
    <div class="crumbs">

        <ul class="breadcrumb" id="breadcrumbs">
            <li><i class="icon-home"></i><a href="@Url.Action("Index", "Dashboard", new { area = "Admin" })">Dashboard</a> </li>
            <li class="current"><a title="" href="javascript: return void(0)">New Supply</a> </li>
        </ul>
    </div>
}
<style>
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4>
                    <i class="icon-reorder"></i>
                    Supply Entry
                </h4>
            </div>
            <div class="widget-content">

                @using (Html.BeginForm("NewSupply", "SupplyManagement", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal row-border" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        @Html.Label("Serial No:", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.SerialNo, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.SerialNo, null, new { @style = "color:red" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Location:", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.Location, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.Location, null, new { @style = "color:red" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.Label("State", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.StateId, new SelectList(Model.StateList, "Value", "Text"), "Please Select a State", new { @class = "form-control", onChange = "GetAllLGA(this)" })
                            @Html.ValidationMessageFor(m => m.StateId, null, new { @style = "color:red" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.Label("LGA", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.supplyForm.LGAId, new SelectList(Model.LgaList, "Value", "Text"), "Please Select a LGA", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.LGAId, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Contractor", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.supplyForm.ContractorId, new SelectList(Model.ContractorList, "Value", "Text"), "Please Select a Contractor", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.ContractorId, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Representative Name", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.RepresentativeName, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.RepresentativeName, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Representative Designation", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.RepresentativeDesignation, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.RepresentativeDesignation, null, new { @style = "color:red" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Representative Phone no:", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.RepresentativePhoneNumber, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.RepresentativePhoneNumber, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Coordinate:", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.Coordinate, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.Coordinate, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Verification Officer:", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.VerificationOfficer, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.supplyForm.VerificationOfficer, null, new { @style = "color:red" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.Label("Verification Date:", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.supplyForm.VerificationDate, null, new { @class = "form-control datepicker-expirydate", @readonly = true })
                            @Html.ValidationMessageFor(m => m.supplyForm.VerificationDate, null, new { @style = "color:red" })
                        </div>
                    </div>

                    <div class="form-actions">
                        @Html.ActionLink("<< Back to List", "Index", null, new { @class = "btn btn-success" })
                        <input type="submit" class="btn btn-warning pull-right" value="Save" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts
    {
    @Scripts.Render("~/Content/Backend/plugins/jquery-ui/jquery-ui-1.10.2.custom.min.js")

    <script type="text/javascript">
        "use strict";
        function getLga(e) {
            var stateId = $(e).val();

            var currentRequest = null;
            var currentRequest = $.ajax({
                url: '@Url.Action("GetLga", "SupplyManagement")',
                dataType: 'json',
                type: 'POST',
                data: { StateId: stateId },
                beforeSend: function () {
                    if (currentRequest != null) {
                        currentRequest.abort();
                    }
                },
                success: function (msg) {
                    $("#supplyForm_LGAId").html("");
                    $.each(msg, function (index, element) {
                        $("#supplyForm_LGAId").append('<option  value="' + element.Value + '">' + element.Text + '</option>');
                    });
                },
                error: function (errmsg) { }
            });
        }

        function GetAllLGA(e) {
            getLga(e);

        }

        "use strict";
        $(document).ready(function () {
            $(".datepicker-issueddate").datepicker({
                defaultDate: +7,
                showOtherMonths: true,
                autoSize: true,
                dateFormat: "yy-mm-dd",
                maxDate: '+0D',
                changeYear: true,
                changeMonth: true, yearRange: "-100:-0"
            });

        });

        $(document).ready(function () {
            $(".datepicker-expirydate").datepicker({
                defaultDate: +7,
                showOtherMonths: true,
                autoSize: true,
                dateFormat: "yy-mm-dd",
                //maxDate: '+0D',
                changeYear: true,
                changeMonth: true

            });
        });


    </script>
}