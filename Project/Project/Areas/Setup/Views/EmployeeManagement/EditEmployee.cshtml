@model Project.Areas.Setup.Models.EmployeeTypeViewModel
@using Project.HtmlHelpers
@{
    ViewBag.Title = "Edit Employee";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.IsGreetings = "true";
}
@section Crumbs{
    <div class="crumbs">

        <ul class="breadcrumb" id="breadcrumbs">
            <li> <i class="icon-home"></i> <a href="@Url.Action("Index", "Dashboard", new { area="Admin"})">Dashboard</a> </li>
            <li class="current"> <a title="" href="javascript: return void(0)"></a>Edit Employee</li>
        </ul>
    </div>
}

<style>
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>


<div class="row">
    <div class="col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4>
                    <i class="icon-reorder"></i>
                    Edit Employee

                </h4>
            </div>
            <div class="widget-content">
                @using (Html.BeginForm("EditEmployee", "EmployeeManagement", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal row-border" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.employeeForm.Id)

                    <div class="form-group">
                        @Html.Label("First Name", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.employeeForm.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.employeeForm.FirstName, null, new { @style = "color:red" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Last Name", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.employeeForm.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.employeeForm.LastName, null, new { @style = "color:red" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Mobile No", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.employeeForm.MobileNo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.employeeForm.MobileNo, null, new { @style = "color:red" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Email Address(Optional)", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.employeeForm.EmailAddress, new { @class = "form-control" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Contact Address", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.employeeForm.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.employeeForm.Address, null, new { @style = "color:red" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Employee Type", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.employeeForm.EmployeeTypeId, new SelectList(Model.ListEmployeeType, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.employeeForm.EmployeeTypeId, null, new { @style = "color:red" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Passport Photo", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            <img src="@Url.Action("DocumentsUploadedPath", new { Path=(Model.FullPhotoPath) + Model.UploadedPhoto})" height="50" width="50" style="border:solid" />
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Exisiting Photo", new { @class = "col-md-2 control-label required" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(x => x.employeeForm.Photo, new { type = "file" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Is Deleted?", new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.CheckBoxFor(m => m.employeeForm.IsDeleted)
                        </div>
                    </div>


                    <div class="form-actions">
                        <a href="@Url.Action("EmployeeList", "EmployeeManagement", new { area="Setup"})" class="btn btn-success btn-xs"><< Back to List </a>
                        <input type="submit" class="btn btn-warning btn-xs pull-right" value="Save" />
                    </div>
                }
            </div>

        </div>
    </div>
</div>