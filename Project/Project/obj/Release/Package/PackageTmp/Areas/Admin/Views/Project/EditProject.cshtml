@model Project.Areas.Admin.Models.ProjectViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Edit "+ Model.project.SerialNo + " Project";
    ViewBag.IsGreetings = "true";
    var db = new Project.DAL.PROEntities();

}
@section Crumbs{
    <div class="crumbs">

        <ul class="breadcrumb" id="breadcrumbs">
            <li><i class="icon-home"></i><a href="@Url.Action("Index", "Dashboard", new { area = "Admin" })">Dashboard</a> </li>
            <li class="current"><a title="" href="javascript: return void(0)">Edit Project </a> </li>
        </ul>
    </div>
}
<style>
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("EditProject", "Project", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-horizontal" }))
            {
                @Html.HiddenFor(x => x.project.TransactionId)
                @Html.AntiForgeryToken()
                <div class="col-md-12">
                    <div class="widget">

                        <div class="widget-content">
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label required">Location:</label>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(m => m.projectForm.Location, null, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.projectForm.Location, null, new { @style = "color:red" })
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label required">State:</label>
                                        <div class="col-md-8">

                                            @Html.DropDownListFor(m => m.StateId, new SelectList(Model.StateList, "Value", "Text"), "Please Select a State", new { @class = "form-control", onChange = "GetAllLGA(this)" })

                                        </div>
                                    </div>

                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label required">LGA:</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.projectForm.LGAId, new SelectList(Model.LgaList, "Value", "Text"), "Please Select a LGA", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.projectForm.LGAId, null, new { @style = "color:red" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label required">Quality of Project:</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(m => m.projectForm.ContractorId, new SelectList(Model.ContractorList, "Value", "Text"), "Please Select a Contractor", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.projectForm.ContractorId, null, new { @style = "color:red" })
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label required">Contract Sum:</label>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(m => m.projectForm.ContractSum, null, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.projectForm.ContractSum, null, new { @style = "color:red" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label required">Has Inspection?:</label>
                                        <div class="col-md-8">
                                            @{
                                                var check = Model.project.Inspection.ToList();
                                                if (check.Any())
                                                {
                                                   
                                                    <span class="label label-success">Yes</span>
                                                }
                                                else
                                                {
                                        <span class="label label-danger">No</span>
                                                }
                                            }
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-2 control-label">Description:</label>
                                <div class="col-md-10">
                                    @Html.TextAreaFor(m => m.projectForm.Description, new { @class = "form-control", rows = "3", cols = "5" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 form-vertical no-margin">

                    <div class="form-actions">
                        <a href="@Url.Action("Index", "Project", new {Id=Model.project.WorkFlowId, area="Admin"})" class="btn btn-success btn-xs"><< Back to List </a>
                        <input type="submit" value="Submit" class="btn btn-primary btn-xs pull-right" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript" language="javascript">
    function DisableBackButton() {
        window.history.forward()

    }
    DisableBackButton();
    window.onload = DisableBackButton;
    window.onpageshow = function (evt) { if (evt.persisted) DisableBackButton() }
    window.onunload = function () { void (0) }
</script>

<script type="text/javascript">
        "use strict";
        function getLga(e) {
            var stateId = $(e).val();

            var currentRequest = null;
            var currentRequest = $.ajax({
                url: '@Url.Action("GetLga", "Project")',
                dataType: 'json',
                type: 'POST',
                data: { StateId: stateId },
                beforeSend: function () {
                    if (currentRequest != null) {
                        currentRequest.abort();
                    }
                },
                success: function (msg) {
                    $("#projectForm_LGAId").html("");
                    $.each(msg, function (index, element) {
                        $("#projectForm_LGAId").append('<option  value="' + element.Value + '">' + element.Text + '</option>');
                    });
                },
                error: function (errmsg) { }
            });
        }

        function GetAllLGA(e) {
            getLga(e);

        }



</script>